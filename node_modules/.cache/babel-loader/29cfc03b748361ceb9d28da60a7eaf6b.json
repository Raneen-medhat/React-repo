{"ast":null,"code":"// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import { bindActionCreators } from 'redux';\n// import {getProductsError, getProducts, getProductsPending} from './../../services/redux/reducers';\n// // import LoadingSpinner from './SomeLoadingSpinner';\n// // import ProductList from './ProductList';\n// class ProductView extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.shouldComponentRender = this.shouldComponentRender.bind(this);\n//     }\n//     componentWillMount() {\n//         const {fetchProducts} = this.props;\n//         fetchProducts();\n//     }\n//     componentDidMount = () => {\n//         // console.log(props)\n//     }\n//     shouldComponentRender() {\n//         const {pending} = this.props;\n//         if(this.pending === false) return false;\n//         // more tests\n//         return true;\n//     }\n//     // render() {\n//     //     const {products, error, pending} = this.props;\n//     //     // if(!this.shouldComponentRender()) return <LoadingSpinner />\n//     //     return (\n//     //         <div className='product-list-wrapper'>\n//     //             {error && <span className='product-list-error'>{error}</span>}\n//     //             <ProductList products={products} />\n//     //         </div>\n//     //     )\n//     // }\n// }\n// const mapStateToProps = state => ({\n//     error: getProductsError(state),\n//     products: getProducts(state),\n//     pending: getProductsPending(state)\n// })\n// const mapDispatchToProps = dispatch => bindActionCreators({\n//     fetchProducts: fetchProductsAction\n// }, dispatch)\n// export default connect(\n//     mapStateToProps,\n//     mapDispatchToProps\n// )(ProductView );","map":{"version":3,"sources":["/var/www/html/Raneen/React/react-repo/src/components/ProductView/ProductView.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import { bindActionCreators } from 'redux';\n\n// import {getProductsError, getProducts, getProductsPending} from './../../services/redux/reducers';\n\n// // import LoadingSpinner from './SomeLoadingSpinner';\n// // import ProductList from './ProductList';\n\n// class ProductView extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.shouldComponentRender = this.shouldComponentRender.bind(this);\n//     }\n\n//     componentWillMount() {\n//         const {fetchProducts} = this.props;\n//         fetchProducts();\n//     }\n//     componentDidMount = () => {\n//         // console.log(props)\n//     }\n\n//     shouldComponentRender() {\n//         const {pending} = this.props;\n//         if(this.pending === false) return false;\n//         // more tests\n//         return true;\n//     }\n\n//     // render() {\n//     //     const {products, error, pending} = this.props;\n\n//     //     // if(!this.shouldComponentRender()) return <LoadingSpinner />\n\n//     //     return (\n//     //         <div className='product-list-wrapper'>\n//     //             {error && <span className='product-list-error'>{error}</span>}\n//     //             <ProductList products={products} />\n//     //         </div>\n//     //     )\n//     // }\n// }\n\n\n// const mapStateToProps = state => ({\n//     error: getProductsError(state),\n//     products: getProducts(state),\n//     pending: getProductsPending(state)\n// })\n\n// const mapDispatchToProps = dispatch => bindActionCreators({\n//     fetchProducts: fetchProductsAction\n// }, dispatch)\n\n// export default connect(\n//     mapStateToProps,\n//     mapDispatchToProps\n// )(ProductView );\n"]},"metadata":{},"sourceType":"module"}