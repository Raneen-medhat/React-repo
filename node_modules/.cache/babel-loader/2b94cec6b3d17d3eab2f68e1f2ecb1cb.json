{"ast":null,"code":"import _defineProperty from \"/var/www/html/Raneen/React/react-repo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport GET_DATA from './../actions/types';\nconst initialState = {// userData: {},\n  // isFetching: false,\n  // isError: false\n};\n\nconst asyncReducer = (state = initialState, action) => {\n  return state;\n};\n\nconst getDataReducer = (state, action) => {\n  switch (action.type) {\n    case GET_DATA:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n      break;\n\n    default:\n      // the dispatched action is not in this reducer, return the state unchanged\n      return state;\n  }\n};\n\nexport default asyncReducer;","map":{"version":3,"sources":["/var/www/html/Raneen/React/react-repo/src/services/redux/reducers/index.js"],"names":["GET_DATA","initialState","asyncReducer","state","action","getDataReducer","type","data","payload"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,oBAArB;AAGA,MAAMC,YAAY,GAAG,CACjB;AACA;AACA;AAHiB,CAArB;;AAME,MAAMC,YAAY,GAAG,CAAEC,KAAK,GAAGF,YAAV,EAAyBG,MAAzB,KAAoC;AACvD,SAAOD,KAAP;AACD,CAFD;;AAKA,MAAME,cAAc,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAOA,MAAM,CAACE,IAAd;AACI,SAAKN,QAAL;AACI,+BACOG,KADP;AAEII,QAAAA,IAAI,EAAEH,MAAM,CAACI;AAFjB;AAIJ;;AAEA;AACI;AACA,aAAOL,KAAP;AAVR;AAYD,CAbD;;AAiBA,eAAeD,YAAf","sourcesContent":["import GET_DATA from './../actions/types';\n\n\nconst initialState = {\n    // userData: {},\n    // isFetching: false,\n    // isError: false\n  };\n  \n  const asyncReducer = ( state = initialState , action) => {\n    return state;\n  };\n\n\n  const getDataReducer = (state, action) => {\n    switch(action.type) {\n        case GET_DATA:\n            return {\n                ...state,\n                data: action.payload\n            }\n        break;\n\n        default:\n            // the dispatched action is not in this reducer, return the state unchanged\n            return state;\n    }\n  }\n\n\n  \n  export default asyncReducer;"]},"metadata":{},"sourceType":"module"}