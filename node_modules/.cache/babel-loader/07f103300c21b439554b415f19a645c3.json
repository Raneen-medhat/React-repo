{"ast":null,"code":"import { GET_DATA, FETCH_PRODUCTS_PENDING, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_ERROR } from './../actions/types';\nimport HTTPClient from './../../networking/queries';\nimport setupInterceptors from './../../services/networking/intercepor';\nexport function fetchProductsPending() {\n  return {\n    type: FETCH_PRODUCTS_PENDING\n  };\n}\nexport function fetchProductsSuccess(products) {\n  return {\n    type: FETCH_PRODUCTS_SUCCESS,\n    products: products\n  };\n}\nexport function fetchProductsError(error) {\n  return {\n    type: FETCH_PRODUCTS_ERROR,\n    error: error\n  };\n}\nexport const fetchData = () => async dispatch => {\n  setupInterceptors();\n  const response = await HTTPClient.fetch('https://jsonplaceholder.typicode.com/posts');\n  dispatch({\n    type: GET_DATA,\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/var/www/html/Raneen/React/react-repo/src/services/redux/actions/index.js"],"names":["GET_DATA","FETCH_PRODUCTS_PENDING","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_ERROR","HTTPClient","setupInterceptors","fetchProductsPending","type","fetchProductsSuccess","products","fetchProductsError","error","fetchData","dispatch","response","fetch","payload","data"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,sBAAnB,EAA2CC,sBAA3C,EAAmEC,oBAAnE,QAA+F,oBAA/F;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AAGA,OAAQ,SAASC,oBAAT,GAAgC;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAEN;AADH,GAAP;AAGH;AAED,OAAO,SAASO,oBAAT,CAA8BC,QAA9B,EAAwC;AAC3C,SAAO;AACHF,IAAAA,IAAI,EAAEL,sBADH;AAEHO,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH;AAED,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACtC,SAAO;AACHJ,IAAAA,IAAI,EAAEJ,oBADH;AAEHQ,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH;AAGD,OAAQ,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9CR,EAAAA,iBAAiB;AACjB,QAAMS,QAAQ,GAAG,MAAMV,UAAU,CAACW,KAAX,CAAiB,4CAAjB,CAAvB;AACAF,EAAAA,QAAQ,CAAC;AAACN,IAAAA,IAAI,EAAEP,QAAP;AAAkBgB,IAAAA,OAAO,EAAEF,QAAQ,CAACG;AAApC,GAAD,CAAR;AAEH,CALO","sourcesContent":["import { GET_DATA ,FETCH_PRODUCTS_PENDING, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_ERROR } from './../actions/types';\nimport HTTPClient from './../../networking/queries';\nimport setupInterceptors from './../../services/networking/intercepor';\n\n\nexport  function fetchProductsPending() {\n    return {\n        type: FETCH_PRODUCTS_PENDING\n    }\n}\n\nexport function fetchProductsSuccess(products) {\n    return {\n        type: FETCH_PRODUCTS_SUCCESS,\n        products: products\n    }\n}\n\nexport function fetchProductsError(error) {\n    return {\n        type: FETCH_PRODUCTS_ERROR,\n        error: error\n    }\n}\n\n\nexport  const fetchData = () => async dispatch => {\n    setupInterceptors()\n    const response = await HTTPClient.fetch('https://jsonplaceholder.typicode.com/posts');\n    dispatch({type: GET_DATA , payload: response.data });\n\n}\n"]},"metadata":{},"sourceType":"module"}