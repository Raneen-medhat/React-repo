{"ast":null,"code":"const LocalStorageService = (() => {\n  var _service;\n\n  function _getService() {\n    if (!_service) {\n      _service = this;\n      return _service;\n    }\n\n    return _service;\n  }\n\n  function _setToken(tokenObj) {\n    localStorage.setItem('access_token', tokenObj.access_token); // if we have refresh token\n    //  localStorage.setItem('refresh_token', tokenObj.refresh_token);\n  }\n\n  function _getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  function _getRefreshToken() {\n    return localStorage.getItem('refresh_token');\n  }\n\n  function _clearToken() {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  }\n\n  function _setLanguage(lang) {\n    localStorage.setItem('active_language', lang);\n  }\n\n  function _getLanguage() {\n    return localStorage.getItem('active_language');\n  }\n\n  return {\n    getService: _getService,\n    setToken: _setToken,\n    getAccessToken: _getAccessToken,\n    getRefreshToken: _getRefreshToken,\n    clearToken: _clearToken,\n    getLanguage: _getLanguage,\n    setLanguage: _setLanguage\n  };\n})();\n\nexport default LocalStorageService;","map":{"version":3,"sources":["/var/www/html/Raneen/React/react-repo/src/services/storage/LocalStorageService.js"],"names":["LocalStorageService","_service","_getService","_setToken","tokenObj","localStorage","setItem","access_token","_getAccessToken","getItem","_getRefreshToken","_clearToken","removeItem","_setLanguage","lang","_getLanguage","getService","setToken","getAccessToken","getRefreshToken","clearToken","getLanguage","setLanguage"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,CAAE,MAAM;AAChC,MAAIC,QAAJ;;AAGA,WAASC,WAAT,GAAuB;AACnB,QAAG,CAACD,QAAJ,EAAc;AACZA,MAAAA,QAAQ,GAAG,IAAX;AACA,aAAOA,QAAP;AACH;;AACD,WAAOA,QAAP;AACD;;AAGD,WAASE,SAAT,CAAmBC,QAAnB,EAA6B;AAC3BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,QAAQ,CAACG,YAA9C,EAD2B,CAE1B;AACD;AACD;;AAGD,WAASC,eAAT,GAA2B;AACzB,WAAOH,YAAY,CAACI,OAAb,CAAqB,cAArB,CAAP;AACD;;AAED,WAASC,gBAAT,GAA4B;AAC1B,WAAOL,YAAY,CAACI,OAAb,CAAqB,eAArB,CAAP;AACD;;AAED,WAASE,WAAT,GAAuB;AACrBN,IAAAA,YAAY,CAACO,UAAb,CAAwB,cAAxB;AACAP,IAAAA,YAAY,CAACO,UAAb,CAAwB,eAAxB;AACD;;AAED,WAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1BT,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCQ,IAAxC;AACD;;AAED,WAASC,YAAT,GAAwB;AACtB,WAAOV,YAAY,CAACI,OAAb,CAAqB,iBAArB,CAAP;AACD;;AAEF,SAAO;AACJO,IAAAA,UAAU,EAAGd,WADT;AAEJe,IAAAA,QAAQ,EAAGd,SAFP;AAGJe,IAAAA,cAAc,EAAGV,eAHb;AAIJW,IAAAA,eAAe,EAAGT,gBAJd;AAKJU,IAAAA,UAAU,EAAGT,WALT;AAMJU,IAAAA,WAAW,EAAEN,YANT;AAOJO,IAAAA,WAAW,EAAET;AAPT,GAAP;AAUC,CAnDwB,GAA5B;;AAsDG,eAAeb,mBAAf","sourcesContent":["const LocalStorageService = ( () => {\n    var _service;\n\n\n    function _getService() {\n        if(!_service) {\n          _service = this;\n          return _service;\n      }\n      return _service;\n    }\n\n\n    function _setToken(tokenObj) {\n      localStorage.setItem('access_token', tokenObj.access_token);\n       // if we have refresh token\n      //  localStorage.setItem('refresh_token', tokenObj.refresh_token);\n    }\n\n\n    function _getAccessToken() {\n      return localStorage.getItem('access_token');\n    }\n\n    function _getRefreshToken() {\n      return localStorage.getItem('refresh_token');\n    }\n\n    function _clearToken() {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }\n\n    function _setLanguage(lang) {\n      localStorage.setItem('active_language', lang);\n    }\n\n    function _getLanguage() {\n      return localStorage.getItem('active_language');\n    }\n\n   return {\n      getService : _getService,\n      setToken : _setToken,\n      getAccessToken : _getAccessToken,\n      getRefreshToken : _getRefreshToken,\n      clearToken : _clearToken,\n      getLanguage: _getLanguage,\n      setLanguage: _setLanguage\n    }\n\n   })();\n\n   \n   export default LocalStorageService;"]},"metadata":{},"sourceType":"module"}