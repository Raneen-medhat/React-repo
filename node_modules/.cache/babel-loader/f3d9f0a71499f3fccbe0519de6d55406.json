{"ast":null,"code":"import _defineProperty from \"/var/www/html/Raneen/React/react-repo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\n\nconst setupInterceptors = store => {\n  console.log('from intercept', store); //   axios.interceptors.request.use( (config) => {\n  //     console.log('config' , config)\n  //     response => successHandler(response),\n  //     error => errorHandler(error)\n  //   }\n  //  );\n\n  axios.interceptors.request.use(config => {\n    // Do something before request is sent\n    return config;\n  }, error => {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n};\n\nconst errorHandler = error => {\n  // Handle errors\n  console.log('from errorHandler');\n  return Promise.reject(_objectSpread({}, error));\n};\n\nconst successHandler = response => {\n  console.log('from successHandler'); // Handle responses\n\n  return response;\n};\n\nexport default setupInterceptors;","map":{"version":3,"sources":["/var/www/html/Raneen/React/react-repo/src/services/networking/intercepor.js"],"names":["axios","setupInterceptors","store","console","log","interceptors","request","use","config","error","Promise","reject","errorHandler","successHandler","response"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,EADqC,CAGnC;AACA;AACA;AACA;AACA;AACA;;AACCF,EAAAA,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,MAAD,IAAY;AAC1C;AACA,WAAOA,MAAP;AACD,GAHA,EAGGC,KAAD,IAAW;AACZ;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GANA;AAOA,CAhBH;;AAmBE,MAAMG,YAAY,GAAIH,KAAD,IAAW;AAC5B;AACFN,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEE,SAAOM,OAAO,CAACC,MAAR,mBAAoBF,KAApB,EAAP;AACH,CALD;;AAOA,MAAMI,cAAc,GAAIC,QAAD,IAAc;AACnCX,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EADmC,CAGjC;;AACA,SAAOU,QAAP;AACH,CALD;;AAOA,eAAeb,iBAAf","sourcesContent":["import axios from 'axios';\n\nconst setupInterceptors = (store) => {\nconsole.log('from intercept', store)\n\n  //   axios.interceptors.request.use( (config) => {\n  //     console.log('config' , config)\n  //     response => successHandler(response),\n  //     error => errorHandler(error)\n  //   }\n  //  );\n   axios.interceptors.request.use((config) => {\n    // Do something before request is sent\n    return config;\n  }, (error) => {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n  };\n\n\n  const errorHandler = (error) => {\n      // Handle errors\n    console.log('from errorHandler')\n\n      return Promise.reject({ ...error })\n  }\n  \n  const successHandler = (response) => {\n    console.log('from successHandler')\n\n      // Handle responses\n      return response\n  }\n\n  export default setupInterceptors;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}