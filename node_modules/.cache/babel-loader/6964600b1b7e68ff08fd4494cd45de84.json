{"ast":null,"code":"import _defineProperty from \"/var/www/html/Raneen/React/react-repo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios, { AxiosPromise, AxiosInstance } from 'axios'; // import LocalStorageService from  './../storage/LocalStorageServicen';\n\nimport config from './config';\nimport store from './../redux/store';\nconsole.log('from intercept');\n\nconst setupInterceptors = store => {\n  axios.interceptors.request.use(config => {\n    // Return a successful response back to the calling service\n    response => successHandler(response), // Return any error which is not due to authentication back to the calling service\n    error => errorHandler(error);\n  });\n};\n\nconst errorHandler = error => {\n  // Handle errors\n  return Promise.reject(_objectSpread({}, error));\n};\n\nconst successHandler = response => {\n  // Handle responses\n  return response;\n};\n\nexport default setupInterceptors;","map":{"version":3,"sources":["/var/www/html/Raneen/React/react-repo/src/services/networking/intercepor.js"],"names":["axios","AxiosPromise","AxiosInstance","config","store","console","log","setupInterceptors","interceptors","request","use","response","successHandler","error","errorHandler","Promise","reject"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,YAAhB,EAA8BC,aAA9B,QAAmD,OAAnD,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAGAC,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AAIA,MAAMC,iBAAiB,GAAIH,KAAD,IAAW;AACjCJ,EAAAA,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCP,MAAD,IAAY;AACxC;AACAQ,IAAAA,QAAQ,IAAIC,cAAc,CAACD,QAAD,CAA1B,EACA;AACAE,IAAAA,KAAK,IAAIC,YAAY,CAACD,KAAD,CAFrB;AAGF,GALD;AAMD,CAPH;;AAUE,MAAMC,YAAY,GAAID,KAAD,IAAW;AAC5B;AACA,SAAOE,OAAO,CAACC,MAAR,mBAAoBH,KAApB,EAAP;AACH,CAHD;;AAKA,MAAMD,cAAc,GAAID,QAAD,IAAc;AACjC;AACA,SAAOA,QAAP;AACH,CAHD;;AAKA,eAAeJ,iBAAf","sourcesContent":["import axios, { AxiosPromise, AxiosInstance } from 'axios';\n// import LocalStorageService from  './../storage/LocalStorageServicen';\nimport config from './config';\nimport store from './../redux/store';\n\n\nconsole.log('from intercept')\n\n\n\nconst setupInterceptors = (store) => {\n    axios.interceptors.request.use((config) => {\n       // Return a successful response back to the calling service\n       response => successHandler(response),\n       // Return any error which is not due to authentication back to the calling service\n       error => errorHandler(error)\n    });\n  };\n\n\n  const errorHandler = (error) => {\n      // Handle errors\n      return Promise.reject({ ...error })\n  }\n  \n  const successHandler = (response) => {\n      // Handle responses\n      return response\n  }\n\n  export default setupInterceptors;\n"]},"metadata":{},"sourceType":"module"}