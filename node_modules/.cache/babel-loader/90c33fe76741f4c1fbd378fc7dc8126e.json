{"ast":null,"code":"import { fetchProductsPending, fetchProductsSuccess, fetchProductsError } from './../../redux/actions/index';\nimport HTTPClient from './../../networking/queries';\nimport { async } from 'q';\n\nfunction fetchProducts() {\n  return dispatch => {\n    dispatch(fetchProductsPending());\n    fetch('https://jsonplaceholder.typicode.com/todos/1').then(res => {\n      console.log(res);\n      res.json();\n    }).then(res => {\n      if (res.error) {\n        throw res.error;\n      }\n\n      dispatch(fetchProductsSuccess(res.products));\n      return res.products;\n    }).catch(error => {\n      dispatch(fetchProductsError(error));\n    });\n  };\n}\n\nexport const fetchData = () => async dispatch => {\n  const response = await HTTPClient.fetch('https://jsonplaceholder.typicode.com/todos/1');\n  dispatch({\n    type: 'GET_DATA',\n    payload: response\n  });\n}; // export default fetchProducts;","map":{"version":3,"sources":["/var/www/html/Raneen/React/react-repo/src/services/redux/reducers/fetchProducts.js"],"names":["fetchProductsPending","fetchProductsSuccess","fetchProductsError","HTTPClient","async","fetchProducts","dispatch","fetch","then","res","console","log","json","error","products","catch","fetchData","response","type","payload"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,EAAqDC,kBAArD,QAA+E,6BAA/E;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,KAAT,QAAsB,GAAtB;;AACA,SAASC,aAAT,GAAyB;AACrB,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;AACAO,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAG;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAA,MAAAA,GAAG,CAACG,IAAJ;AACH,KAJD,EAKCJ,IALD,CAKMC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACI,KAAP,EAAc;AACV,cAAMJ,GAAG,CAACI,KAAV;AACH;;AACDP,MAAAA,QAAQ,CAACL,oBAAoB,CAACQ,GAAG,CAACK,QAAL,CAArB,CAAR;AACA,aAAOL,GAAG,CAACK,QAAX;AACH,KAXD,EAYCC,KAZD,CAYOF,KAAK,IAAI;AACZP,MAAAA,QAAQ,CAACJ,kBAAkB,CAACW,KAAD,CAAnB,CAAR;AACH,KAdD;AAeH,GAjBD;AAkBH;;AAED,OAAO,MAAMG,SAAS,GAAG,MAAM,MAAMV,QAAN,IAAkB;AAC7C,QAAMW,QAAQ,GAAG,MAAMd,UAAU,CAACI,KAAX,CAAiB,8CAAjB,CAAvB;AACAD,EAAAA,QAAQ,CAAC;AAACY,IAAAA,IAAI,EAAE,UAAP;AAAoBC,IAAAA,OAAO,EAAEF;AAA7B,GAAD,CAAR;AAEH,CAJM,C,CAMP","sourcesContent":["import { fetchProductsPending, fetchProductsSuccess, fetchProductsError } from './../../redux/actions/index';\nimport HTTPClient from './../../networking/queries';\nimport { async } from 'q';\nfunction fetchProducts() {\n    return dispatch => {\n        dispatch(fetchProductsPending());\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n        .then(res =>{\n            console.log(res)\n            res.json()\n        })\n        .then(res => {\n            if(res.error) {\n                throw(res.error);\n            }\n            dispatch(fetchProductsSuccess(res.products));\n            return res.products;\n        })\n        .catch(error => {\n            dispatch(fetchProductsError(error));\n        })\n    }\n}\n\nexport const fetchData = () => async dispatch => {\n    const response = await HTTPClient.fetch('https://jsonplaceholder.typicode.com/todos/1');\n    dispatch({type: 'GET_DATA' , payload: response });\n\n}\n\n// export default fetchProducts;\n"]},"metadata":{},"sourceType":"module"}